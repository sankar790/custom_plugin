//--------Echo.java----------

//package com.ex.cordova.plugin;
package com.example.plugin;
import org.apache.cordova.api.CallbackContext;
import org.apache.cordova.api.CordovaPlugin;
import org.apache.cordova.api.PluginResult;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;
import android.app.Activity;
import com.example.hello.*;

import android.app.Application;
import android.content.Context;
/**
 * This class echoes a string called from JavaScript.
 */
public class Echo extends CordovaPlugin {
	//Context context =  cordova.getActivity().getApplicationContext();
	//String s=((Object) context).customFunctionCalled();
	//String s = ((GlobalClass) this.getApplication()).getSomeVariable();
	//String s=getApplicationContext.getPhoneNumber();
	// final GlobalClass1 globalVariable = (GlobalClass1)cordova.getActivity().getApplication();
     //final String name  = globalVariable.getName();
    //final String email = globalVariable.getEmail();
    @Override
    public boolean execute(String action, JSONArray args, CallbackContext callbackContext) throws JSONException {
        if (action.equals("echo")) {
        	  Global g = Global.getInstance();
              
           // String message = args.getString(0);
           String message = g.getData();
            this.echo(message, callbackContext);
            return true;
        }
        return false;
    }

    private void echo(String message, CallbackContext callbackContext) {
        if (message != null && message.length() > 0) {
            callbackContext.success(message);
        } else {
            callbackContext.error("Expected one non-empty string argument.");
        }
    }
}

//----------------CustomPlugins.js----------------------------

 (function() {
  
  var cordovaRef = window.PhoneGap || window.Cordova || window.cordova; // old to new fallbacks
  
  function CustomPlugins() {
  // Does nothing
  }
  
  
  CustomPlugins.prototype.callPlugin = function(loc,callback)
  {
  //alert(loc[0]);
  cordovaRef.exec(callback,false,"Echo","echo", [loc,'ok']);//string
  //cordovaRef.exec(callback,false,"CustomPlugins","echo", loc);//Array
  
  
  };
  

  
  // Note: this plugin does NOT install itself, call this method some time after deviceready to install it
  // it will be returned, and also available globally from window.plugins.childBrowser
  CustomPlugins.install = function()
  {
  if(!window.plugins) {
  window.plugins = {};
  }
  if ( ! window.plugins.CustomPlugins ) {
  window.plugins.CustomPlugins = new CustomPlugins();
  }
  
  };
  
  
  if (cordovaRef && cordovaRef.addConstructor) {
  cordovaRef.addConstructor(CustomPlugins.install);
  } else {
  console.log("customplugin Cordova Plugin could not be installed.");
  return null;
  }
  
  
  })();

//---------------call in javascript----------------------

   var single_arg='this is my data' window.plugins.CustomPlugins.callPlugin(single_arg,function(res){
                                               alert(res);
                                                });


//----------------config.xml------------------


 <feature name="Echo">
      <param name="android-package" value="com.example.plugin.Echo"/>
    </feature>
	
	
	
	
	
	//-----extra------------------------------------------------------
	
	global.java




//package com.ex.cordova.plugin;
package com.example.hello;
public class Global{
	   private static Global instance;
	 
	   // Global variable
	   private String data;
	 
	   // Restrict the constructor from being instantiated
	   private Global(){}
	 
	   public void setData(String d){
	     this.data="sankar";
	   }
	   public String getData(){
	     return this.data;
	   }
	 
	   public static synchronized Global getInstance(){
	     if(instance==null){
	       instance=new Global();
	     }
	     return instance;
	   }


	}
	
	
	//---------------------------------------------------------
	   Global g = Global.getInstance();
        g.setData("sankar");